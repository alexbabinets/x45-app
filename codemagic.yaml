workflows:
  ios-capacitor:
    name: X45 iOS (Capacitor)
    environment:
      xcode: latest
      groups:
        - apple-connect   # APP_STORE_CONNECT_* are read from this group
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true

    scripts:
      # 0) Write a clean Capacitor config at the REPO ROOT (forces correct appId)
      - |
        echo "📝 Writing capacitor.config.json at project root"
        cat > capacitor.config.json <<'JSON'
        {
          "appId": "com.expressfitness.x45",
          "appName": "X45 Express Fitness",
          "webDir": "www",
          "bundledWebRuntime": false
        }
        JSON

      # 1) Prepare Capacitor & (re)create iOS from this config
      - |
        echo "👉 Setting up Capacitor (fresh iOS)"
        npm install -g @capacitor/cli
        npm install @capacitor/core @capacitor/ios --save --no-fund --no-audit || true

        # Always recreate iOS so bundle id and files are correct
        rm -rf ios
        npx cap add ios
        npx cap copy ios
        npx cap sync ios

      # 2) Install CocoaPods (creates/updates .xcworkspace)
      - |
        echo "📦 Installing CocoaPods"
        cd ios/App
        pod install --repo-update
        cd ../../

      # 3) Fetch signing files and apply to the Xcode project
      - |
        echo "🔐 Fetching & applying signing profiles"
        keychain initialize
        app-store-connect fetch-signing-files "com.expressfitness.x45" --type IOS_APP_STORE --create
        cd ios/App
        xcode-project use-profiles
        cd ../../

      # 4) Sanity check: print PRODUCT_BUNDLE_IDENTIFIER seen by Xcode
      - |
        echo "🔎 PRODUCT_BUNDLE_IDENTIFIER per Xcode:"
        xcodebuild -workspace ios/App/App.xcworkspace -scheme App -showBuildSettings \
          | grep -m1 PRODUCT_BUNDLE_IDENTIFIER || true

      # 5) Build signed IPA (workspace + export options produced by use-profiles)
      - |
        echo "🏗️ Building signed IPA"
        xcode-project build-ipa \
          --workspace ios/App/App.xcworkspace \
          --scheme App \
          --archive-flags="-destination 'generic/platform=iOS'" \
          --export-options-plist=$HOME/export_options.plist

    artifacts:
      - build/ios/ipa/*.ipa
      - ios/App/build/**/*.log

    publishing:
      email:
        recipients:
          - alexbabinets@gmail.com
        notify:
          success: true
          failure: true
